input {
    file {
        path => "/Users/jiahua/gohome/src/github.com/CardInfoLink/*.log"
        start_position => beginning
        ignore_older => 0
    }
    stdin{
    }
}

filter{
    if [path] =~ "error" {
        mutate {
            add_field => {
                "log_name" => "nginx_error"
            }
        }

        # handle error logs
    }
    else {

    if [path] =~ "bigcat" {
        mutate {
            add_field => {
                "log_name" => "nginx_access_bigcat"
            }
        }
    }else {
        mutate {
            add_field => {
                "log_name" => "nginx_access_others"
            }
        }
    }

    grok {
        patterns_dir => ["./patterns"]
        match => {
        "message" => "%{TIMESTAMP_ISO8601:timestamp} %{IP:client} %{WORD:method} %{URIPATHPARAM:request} %{NOTSPACE:http_version} %{IPORHOST:hostname} %{INT:status} %{NUMBER:request_time} %{NUMBER:bytes_sent} %{NUMBER:body_bytes_sent} %{HOSTPORT:upstream} (?:%{INT:upstream_status}|-) (?:%{NUMBER:upstream_response_time}|-) %{QUOTEDSTRING:agent}" }
        remove_field => [ "http_version" ]
        overwrite => [ "message" ]
    }

    ruby {
        code => "event['time'] = '2000-01-01'+event['timestamp'][10..-1]"
    }

    date {
        match => ["timestamp", "ISO8601"]
        remove_field => ["timestamp"]
    }

    date {
        match => ["time", "ISO8601"]
        target => "@time"
        remove_field => ["time"]
    }

    mutate {
        convert => { "bytes_sent" => "integer" }
        convert => { "body_bytes_sent" => "integer" }
        convert => { "request_time" => "float" }
        convert => { "upstream_response_time" => "float" }
        convert => { "status" => "integer" }
        convert => { "upstream_status" => "integer" }
    }

    useragent {
        source => "agent"
    }

    }
}

output{
    elasticsearch {
        index => "%{log_name}-%{+YYYY.MM.dd}"
    }
    stdout {
        codec => rubydebug
    }
}